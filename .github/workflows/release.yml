name: Release exe

on:
  push:
    branches:
      - main

jobs:

  publish_executable:
    name: release the exe folder
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for changes in executable folder
        id: check_changes
        run: |
          # Create a checksum of the executable folder
          find executable -type f -exec md5sum {} \; | sort -k 2 | md5sum > current_checksum.md5
          
          # Fetch the previous commit and checkout to that state
          git fetch origin main
          git checkout FETCH_HEAD~1
          
          # Create a checksum of the executable folder in the previous commit
          find executable -type f -exec md5sum {} \; | sort -k 2 | md5sum > previous_checksum.md5
          
          # Compare the checksums
          if cmp -s current_checksum.md5 previous_checksum.md5; then
            echo "No changes detected in the executable folder."
            echo "changes_detected=false" >> $GITHUB_ENV
          else
            echo "Changes detected in the executable folder."
            echo "changes_detected=true" >> $GITHUB_ENV
          fi

      - name: Compress executable folder
        if: env.changes_detected == 'true'
        run: |
          zip -r executable_folder.zip executable

      - name: Create or update GitHub release
        if: env.changes_detected == 'true'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload executable folder to release
        if: env.changes_detected == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./executable_folder.zip
          asset_name: executable_folder.zip
          asset_content_type: application/zip
